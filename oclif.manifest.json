{"version":"2.0.0","commands":{"acu-pack:apex:scaffold":{"id":"acu-pack:apex:scaffold","description":"\r\nGenerates Apex test classes (and cls-meta files) for specified CustomObjects.","usage":"<%= command.id %> [-s <string>] [-o <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:apex:scaffold -u myOrgAlias -s Account,MyObject__c'\n    Generates AccountTest.cls & MyObjectTest.cls Apex test classes (and cls-meta files) for the Account & MyObject__c SObject types. Random values assigned to required fields by default","$ sfdx acu-pack:apex:scaffold -u myOrgAlias -o scaffold-options.json\n    Generates Apex test classes (and cls-meta files) for specified CustomObjects. The specified options file is used."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"sobjects":{"name":"sobjects","type":"option","char":"s","description":"A comma separated list of SObject types generate Apex Test classes for. This list overrides any SObjects list in the options file."},"options":{"name":"options","type":"option","char":"o","description":"A file containing the Apex Test scaffold options. Specifying this option will create the file if it doesn't exist already."}},"args":[{"name":"file"}]},"acu-pack:api:get":{"id":"acu-pack:api:get","description":"\r\nPerforms the GET REST action against the specified URL/URI.","usage":"<%= command.id %> -m <string> -i <string> [-o <string>] [-t] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:api:get -u myOrgAlias -m Account -i 068r0000003slVtAAI\n    Performs the GET REST API action against the Account metadata type with an id of 068r0000003slVtAAI and writes the body to 068r0000003slVtAAI.json.","$ sfdx acu-pack:api:get -u myOrgAlias -t true -m Account -i 068r0000003slVtAAI -o ./output/files/{Id}.json\n    Performs the GET REST API action against the Account metadata type with an id of 068r0000003slVtAAI and writes the body to ./output/files/068r0000003slVtAAI.json.","$ sfdx acu-pack:api:get -u myOrgAlias -m ContentVersion.VersionData -i 068r0000003slVtAAI -o ./output/files/{Id}.pdf\n    Performs the GET REST API action against the ContentVersion metadata type with an id of 068r0000003slVtAAI and writes the VersionData field value body to 068r0000003slVtAAI.pdf.\n    NOTE: Not all metadata types support field data access."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"metadata":{"name":"metadata","type":"option","char":"m","description":"The metadata to execute the API against. The dot operator can be used to retrieve a specific field (i.e. ContentVersion.VersionData)","required":true},"ids":{"name":"ids","type":"option","char":"i","description":"A comma delimited list of Ids to get. A file will be written for each Id provided","required":true},"output":{"name":"output","type":"option","char":"o","description":"OPTIONAL: The output folder path for the files. The current directory is the default."},"tooling":{"name":"tooling","type":"boolean","char":"t","description":"Set to true to specify the Tooling API.","allowNo":false}},"args":[{"name":"file"}]},"acu-pack:package:build":{"id":"acu-pack:package:build","description":"\r\nBuilds a standard SFDX source format package file from the specified org's existing metadata.","usage":"<%= command.id %> [-x <string>] [-m <string>] [-o <string>] [-n <string>] [-s] [-a] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:package:build -o options/package-options.json -x manifest/package-acu.xml -u myOrgAlias\n    Builds a SFDX package file (./manifest/package.xml) which contains all the metadata from the myOrgAlias.\n    The options defined (options/package-options.json) are honored when building the package."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"package":{"name":"package","type":"option","char":"x","description":"The path to the package file to be generated. By default the path is 'package.xml'"},"metadata":{"name":"metadata","type":"option","char":"m","description":"A comma separated list of metadata to include. This list overrides any exclude list in the options file."},"options":{"name":"options","type":"option","char":"o","description":"A file containing the package build options. Specifying this option will create the file if it doesn't exist already."},"namespaces":{"name":"namespaces","type":"option","char":"n","description":"A comma separated list of namespaces to include when retrieveing metadata. By default namespaces are excluded."},"source":{"name":"source","type":"boolean","char":"s","description":"Set this flag to 'true' to use Salesforce's Source Tracking data as the contents for the package file.","allowNo":false},"append":{"name":"append","type":"boolean","char":"a","description":"Set this flag to 'true' if you wish to append to the existing package.xml file. The default (false) overwrites the existing file.","allowNo":false}},"args":[{"name":"file"}]},"acu-pack:package:merge":{"id":"acu-pack:package:merge","description":"\r\nMerges one SFDX package file into another.","usage":"<%= command.id %> -s <filepath> -d <filepath> [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:package:merge -s manifest/package.xml -d manifest/package-sprint17.xml\n    Merges package.xml into package-sprint17.xml"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"source":{"name":"source","type":"option","char":"s","description":"The source SFDX package. This package wins all conflict battles!","required":true},"destination":{"name":"destination","type":"option","char":"d","description":"The destination SFDX package which contains the merge results. It will be created if it does not exist.","required":true}},"args":[{"name":"file"}]},"acu-pack:package:permissions":{"id":"acu-pack:package:permissions","description":"\r\nRetrieve all metadata related to Profile security/access permissions.","usage":"<%= command.id %> [-x <string>] [-m <string>] [-n <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:package:permissions -u myOrgAlias\n    Creates a package file (package-permissions.xml) which contains\n    Profile & PermissionSet metadata related to ApexClass, ApexPage, CustomApplication, CustomObject, CustomField, CustomTab, PermissionSet, Profile, RecordType, Layout permissions.","$ sfdx acu-pack:package:permissions -u myOrgAlias -m CustomObject,CustomApplication\n    Creates a package file (package-permissions.xml) which contains\n    Profile & PermissionSet metadata related to CustomObject & CustomApplication permissions."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"package":{"name":"package","type":"option","char":"x","description":"The path to the package file to be generated. By default the path is 'package-permissions.xml'"},"metadata":{"name":"metadata","type":"option","char":"m","description":"A comma separated list of the metadata types to include. This overrides the default list: ApexClass, ApexPage, CustomApplication, CustomObject, CustomField, CustomTab, PermissionSet, Profile, RecordType, Layout."},"namespaces":{"name":"namespaces","type":"option","char":"n","description":"A comma separated list of namespaces to include when retrieveing metadata. By default namespaces are excluded."}},"args":[{"name":"file"}]},"acu-pack:schema:dictionary":{"id":"acu-pack:schema:dictionary","description":"\r\nGenerates a DataDictionary-[Org].xlsx file from an Org's Object & Field metadata.","usage":"<%= command.id %> [-r <string>] [-n <string>] [-o <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:schema:dictionary -u myOrgAlias\n    Generates a DataDictionary-myOrgAlias.xlsx file from an Org's configured Object & Field metadata."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"report":{"name":"report","type":"option","char":"r","description":"The path for the data dictionary report XLSX file. This overrides the default: DataDictionary-{ORG}.xlsx."},"namespaces":{"name":"namespaces","type":"option","char":"n","description":"A comma separated list of namespaces to include when retrieveing metadata. By default namespaces are excluded."},"options":{"name":"options","type":"option","char":"o","description":"A file containing the Data Dictionary options. Specifying this option will create the file if it doesn't exist already."}},"args":[{"name":"file"}]},"acu-pack:source:permissions":{"id":"acu-pack:source:permissions","description":"\r\nGenerate a security report based on configured permissions.\r\nThe accuracy of this report is dependant on the configuration in the local project.\r\nIt is suggested that a permissions package be created using the acu-pack:package:permissions\r\ncommand and that package is retrieved from the org prior to executing this command.","usage":"<%= command.id %> [-p <string>] [-r <string>] [-f <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:source:permissions -u myOrgAlias\n    Reads security information from source-formatted configuration files (**/objects/*/*.object-meta.xml, **/objects/*/fields/*.field-meta.xml, **/permissionsets/*.permissionset-meta.xml, **/profiles/*.profile-meta.xml) located in default project source location and writes the 'PermissionsReport.xlsx' report file."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"source":{"name":"source","type":"option","char":"p","description":"OPTIONAL: The source folder to start the meta scan from. Overrides the project's default package directory folder.","required":false},"report":{"name":"report","type":"option","char":"r","description":"OPTIONAL: The path for the permissions report XLSX file. This overrides the default: PermissionsReport.xlsx.","required":false},"folders":{"name":"folders","type":"option","char":"f","description":"OPTIONAL: A comma separated list of folders to include. This list overrides the defaults: **/objects/*/*.object-meta.xml, **/objects/*/fields/*.field-meta.xml, **/permissionsets/*.permissionset-meta.xml, **/profiles/*.profile-meta.xml.","required":false}},"args":[{"name":"file"}]},"acu-pack:source:profile":{"id":"acu-pack:source:profile","description":"\r\nDetermines the compatibility for one or more profiles metadata files with a specified Org. WARNING: This command should be executed by a user with full read permissions to all objects & fields.","usage":"<%= command.id %> [-p <string>] [-m] [-o <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:source:profile -u myOrgAlias\n    Compares the profile metadata files in **/profiles/*.profile-meta.xml,**/permissionsets/*.permissionset-meta.xml to the specified Org to detemrine deployment compatibility.","$ sfdx acu-pack:source:profile -m true -u myOrgAlias\n    Compares the profile metadata files in **/profiles/*.profile-meta.xml,**/permissionsets/*.permissionset-meta.xml to the specified Org to and updates the metadat files to ensuredeployment compatibility."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"source":{"name":"source","type":"option","char":"p","description":"OPTIONAL: Comma separated path to the Profile and/or PermissionsSet  metadata to evaluate. This overrides the defaults: **/profiles/*.profile-meta.xml,**/permissionsets/*.permissionset-meta.xml.","required":false},"modify":{"name":"modify","type":"boolean","char":"m","description":"OPTIONAL: Setting this flag to true will updated the existing metadat to remove the incompatibile entries.","required":false,"allowNo":false},"output":{"name":"output","type":"option","char":"o","description":"OPTIONAL: The output folder path for the modified profile metadata files. The existing files are overwritten if not specififed.","required":false}},"args":[{"name":"file"}]},"acu-pack:source:xpath":{"id":"acu-pack:source:xpath","description":"\r\nValidates XML against xpath selects and known bad values.","usage":"<%= command.id %> [-o <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:source:xpath -o ./xpathOptions.json\"\n    Validates the project source from the x-path rules specified in 'xpath-options.json'"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"options":{"name":"options","type":"option","char":"o","description":"A file containing the XPathOptions json. Specifying this option will create the file if it doesn't exist already."}},"args":[{"name":"file"}]},"acu-pack:admin:user:unmask":{"id":"acu-pack:admin:user:unmask","description":"\r\nRemoves the .invalid extension from a User's email address. This extenion is automatically added when a sandbox is refreshed.","usage":"<%= command.id %> [-l <string>] [-f <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx admin:user:unmask -u myOrgAlias -l 'user1@sf.com, user2@sf.com, user3@sf.com'\n    Removes the .invalid extension from the email address associated to the list of specified users in the specified Org.","$ sfdx admin:user:unmask -u myOrgAlias -f qa-users.txt\n    Removes the .invalid extension from the email address associated to the list of users in the specified file in the specified Org."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"userlist":{"name":"userlist","type":"option","char":"l","description":"A comma delimited list of usernames for the User objects to update."},"userfile":{"name":"userfile","type":"option","char":"f","description":"A file which contains a list of usernames for the User objects to update."}},"args":[{"name":"file"}]},"acu-pack:admin:workspace:delete":{"id":"acu-pack:admin:workspace:delete","description":"\r\nDeletes the Developer Console IDEWorkspace object for the specified user(s).","usage":"<%= command.id %> [-l <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx admin:workspace:delete -u myOrgAlias\n    Deletes the Developer Console IDEWorkspace objects for the specified target username (-u).","$ sfdx admin:workspace:delete -u myOrgAlias -l 'user1@sf.com, user2@sf.com, user3@sf.com'\n    Deletes the Developer Console IDEWorkspace objects for the specified list of users (-l)."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"userlist":{"name":"userlist","type":"option","char":"l","description":"A comma delimited list of usernames to reset workspaces for."}},"args":[{"name":"file"}]},"acu-pack:apex:coverage:clear":{"id":"acu-pack:apex:coverage:clear","description":"\r\nClears the Apex Code Coverage data from the specified Org.","usage":"<%= command.id %> [-m <string>] [-n <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:apex:coverage:clear -u myOrgAlias\n    Deletes the existing instances of ApexCodeCoverageAggregate from the specific Org."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"metadatas":{"name":"metadatas","type":"option","char":"m","description":"An optional comma separated list of metadata to include. The defaults are: (ApexCodeCoverageAggregate.)"},"classortriggernames":{"name":"classortriggernames","type":"option","char":"n","description":"An optional comma seperated list of class or trigger names to include"}},"args":[{"name":"file"}]},"acu-pack:apex:coverage:execute":{"id":"acu-pack:apex:coverage:execute","description":"\r\nExecutes Apex tests and includes Code Coverage metrics.","usage":"<%= command.id %> [-w <integer>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:apex:coverage:execute -u myOrgAlias\n    Enqueues Apex Tests to be run in myOrgAlias with Code Coverage metrics. The command block until all tests have completed.","$ sfdx acu-pack:apex:coverage:execute -u myOrgAlias -w 30\n    Enqueues Apex Tests to be run in myOrgAlias with Code Coverage metrics and waits up to 30 minutes for test completion.","$ sfdx acu-pack:apex:coverage:execute -u myOrgAlias -w 0\n    Enqueues Apex Tests to be run in myOrgAlias with Code Coverage metrics and returns immediately."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"wait":{"name":"wait","type":"option","char":"w","description":"The optional wait time (minutes) for test execution to complete. A value of -1 means infinite wait. A value of 0 means no wait. The default is -1"}},"args":[{"name":"file"}]},"acu-pack:apex:coverage:report":{"id":"acu-pack:apex:coverage:report","description":"\r\nPull Code Coverage metrics and generates a report.","usage":"<%= command.id %> [-r <string>] [-w <integer>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:apex:coverage:report -u myOrgAlias -r myCodeCoverageReport.xlsx\n    Pulls the Code Coverage metrics from myOrgAlias and generates a CodeCoverageReport-myOrgAlias.xlsx report."],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"report":{"name":"report","type":"option","char":"r","description":"The optional path for the generated report. CodeCoverageReport-{ORG}.xlsx"},"wait":{"name":"wait","type":"option","char":"w","description":"The optional wait time (minutes) for test execution to complete. A value of -1 means infinite wait. A value of 0 means no wait. The default is -1"}},"args":[{"name":"file"}]},"acu-pack:schema:profile:retrieve":{"id":"acu-pack:schema:profile:retrieve","description":"\r\nRetrives Profiles from Org without need to generate package.xml","usage":"<%= command.id %> -n <array> [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["\n    $ sfdx acu-pack:schema:profile:retrieve -u myOrgAlias -n \"Admin,Support\"\n    Retrieves 5 profiles at a time. Default Path - force-app/main/default/profile "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"names":{"name":"names","type":"option","char":"n","description":"Comma seperated profile names with out any extension.Example \"Admin,Agent\". 5 Profiles can be retrieved at a time","required":true}},"args":[{"name":"file"}]},"acu-pack:source:delta:git":{"id":"acu-pack:source:delta:git","description":"\r\nUses a git-diff file to detect deltas. Generate a git-diff.txt diff file as follows: git --no-pager diff --name-status --no-renames -w <target branch> > git-diff.txt","usage":"<%= command.id %> -s <filepath> [-g <filepath>] [-d <filepath>] [-f <filepath>] [-i <filepath>] [-r <filepath>] [-c] [-a <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:source:delta:git -g git.txt -s force-app -d deploy\n    Reads the specified -(g)it diff file 'git.txt' and uses it to identify the deltas in\n    -(s)ource 'force-app' and copies them to -(d)estination 'deploy'"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"git":{"name":"git","type":"option","char":"g","description":"The output of a git-diff command (https://git-scm.com/docs/git-diff)"},"source":{"name":"source","type":"option","char":"s","description":"The source folder to start the delta scan from.","required":true},"destination":{"name":"destination","type":"option","char":"d","description":"The destination folder for the deltas."},"force":{"name":"force","type":"option","char":"f","description":"Path to a file containing folders & files to include in the delta destination. Will override md5/git AND ignore file contents."},"ignore":{"name":"ignore","type":"option","char":"i","description":"Path to a file containing folders & files to ignore. Will override md5/git file contents."},"deletereport":{"name":"deletereport","type":"option","char":"r","description":"Path to a file to write deleted files."},"check":{"name":"check","type":"boolean","char":"c","description":"Does a dry-run of a deployment. Inspect the log file for results. NOTE: This option is ignored if no (d)estination option is provided.","allowNo":false},"copyfulldir":{"name":"copyfulldir","type":"option","char":"a","description":"Specifies a comma delimited list of directories where all files should be copied if one of the files changed. The default list is: aura,lwc,experience"}},"args":[{"name":"file"}]},"acu-pack:source:delta:md5":{"id":"acu-pack:source:delta:md5","description":"\r\nUses an MD5 hash file to detect deltas.","usage":"<%= command.id %> -s <filepath> [-m <filepath>] [-d <filepath>] [-f <filepath>] [-i <filepath>] [-r <filepath>] [-c] [-a <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"acu-pack","pluginType":"core","aliases":[],"examples":["$ sfdx acu-pack:source:delta:md5 -m md5.txt -s force-app -d deploy\n    Reads the specified -(m)d5 file 'md5.txt' and uses it to identify the deltas in\n    -(s)ource 'force-app' and copies them to -(d)estination 'deploy'"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"md5":{"name":"md5","type":"option","char":"m","description":"The MD5 hash list file to use"},"source":{"name":"source","type":"option","char":"s","description":"The source folder to start the delta scan from.","required":true},"destination":{"name":"destination","type":"option","char":"d","description":"The destination folder for the deltas."},"force":{"name":"force","type":"option","char":"f","description":"Path to a file containing folders & files to include in the delta destination. Will override md5/git AND ignore file contents."},"ignore":{"name":"ignore","type":"option","char":"i","description":"Path to a file containing folders & files to ignore. Will override md5/git file contents."},"deletereport":{"name":"deletereport","type":"option","char":"r","description":"Path to a file to write deleted files."},"check":{"name":"check","type":"boolean","char":"c","description":"Does a dry-run of a deployment. Inspect the log file for results. NOTE: This option is ignored if no (d)estination option is provided.","allowNo":false},"copyfulldir":{"name":"copyfulldir","type":"option","char":"a","description":"Specifies a comma delimited list of directories where all files should be copied if one of the files changed. The default list is: aura,lwc,experience"}},"args":[{"name":"file"}]}}}